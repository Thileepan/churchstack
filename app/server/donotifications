<?php
$APPLICATION_PATH = "../";

//This files secures the action being triggered by cross-domain attacks
include $APPLICATION_PATH."utils/validateauth.php";

include $APPLICATION_PATH.'utils/JSON.php';
include_once $APPLICATION_PATH . '/classes/class.notification.php';
include_once $APPLICATION_PATH . '/plugins/carbon/src/Carbon/Carbon.php';

//process request
$req = $_REQUEST['req'];

if($req == 1)
{
	$is_edit = trim($_POST['isEdit']);
	$notification_id = trim($_POST['msgID']);
	$notification_type = trim($_POST['msgType']);
	
	$to_return = '';
	$to_return .= '<div class="row-fluid">';
		$to_return .= '<div class="span10">';
			$to_return .= '<form class="form-horizontal" onsubmit="return false;">';
				$to_return .= '<div class="control-group">';
				$to_return .= '<label class="control-label" for="inputNotificationType">Compose your</label>';
					$to_return .= '<div class="controls">';
						$to_return .= '<select id="inputNotificationType" onchange="onChangeNotificationType();"><option value="1">Email</option><option value="2" '.(($notification_type == 2)?"selected":"").'>SMS</option></select>';
						$to_return .= '<div class="pull-right muted">Status: <span class="label label-info">'.(($is_edit)?"Draft":"New").'</span></div>';
					$to_return .= '</div>';
				$to_return .= '</div>';
				$to_return .= '<div class="control-group">';
				$to_return .= '<label class="control-label" for="inputTo">To</label>';
					$to_return .= '<div class="controls">';
						$to_return .= '<input type="text" class="span12" id="inputTo" value="" data-provide="typeahead" autocomplete="off" placeholder="Receipient Address">';
						$to_return .= '<input type="text" class="span12" id="selectedPariticipants" value="" data-role="tagsinput" style="display:none">';
					$to_return .= '</div>';
				$to_return .= '</div>';
				$to_return .= '<div class="control-group" id="divSubject" style="display:'.(($notification_type == 1)?"":"none").'">';
				$to_return .= '<label class="control-label" for="inputSubject">Subject</label>';
					$to_return .= '<div class="controls">';
						$to_return .= '<input type="text" class="span12" id="inputSubject" value="'.$notification_subject.'" placeholder="Subject">';
					$to_return .= '</div>';
				$to_return .= '</div>';
				$to_return .= '<div class="control-group" id="divEmailMessage" style="display:'.(($notification_type == 1)?"":"none").'">';
				$to_return .= '<label class="control-label" for="inputEmailMessage">Message</label>';
					$to_return .= '<div class="controls">';
						$to_return .= '<div id="inputEmailMessage" value="'.$notification_msg.'" placeholder="Your Message"></div>';
					$to_return .= '</div>';
				$to_return .= '</div>';
				$to_return .= '<div class="control-group" id="divSMSMessage" style="display:'.(($notification_type == 1)?"none":"").'">';
				$to_return .= '<label class="control-label" for="inputSMSMessage">Message</label>';
					$to_return .= '<div class="controls">';
						$to_return .= '<textarea id="inputSMSMessage" placeholder="Your Message (160 characters)" rows="5" class="span12" onkeyup="calculateSMSRemainingChars();" onkeydown="calculateSMSRemainingChars();">'.$notification_msg.'</textarea> &nbsp<span id="spanAllowedCharText" class="pull-right muted">160</span>';
					$to_return .= '</div>';
				$to_return .= '</div>';
				$to_return .= '<div class="control-group">';
					$to_return .= '<div class="controls">';
						$to_return .= '<div class="pull-left">';
							$to_return .= '<button class="btn btn-small btn-info" onclick="sendMessage(1);"><i class="icon-white icon-file" style="margin-top:2px;"></i>&nbsp;Save as Draft</button>&nbsp;';
							$to_return .= '<button class="btn btn-small btn-success" onclick="sendMessage(0);"><i class="icon-white icon-envelope" style="margin-top:2px;"></i>&nbsp;Send</button>';
							$to_return .= '<input type="hidden" id="smsAllowedCharLength" value="160" />';
							$to_return .= '<input type="hidden" id="notificationID" value="'.$notification_id.'" />';
							$to_return .= '<input type="hidden" id="hiddenIsEdit" value="'.$is_edit.'" />';
						$to_return .= '</div>';
						$to_return .= '<div class="pull-right">';
							$to_return .= '<button class="btn btn-small btn-danger" onclick="discardMessageConfirmation();"><i class="icon-white icon-trash" style="margin-top:2px;"></i>&nbsp;Discard</button>&nbsp;';
						$to_return .= '</div>';						
					$to_return .= '</div>';
				$to_return .= '</div>';
				
			$to_return .= '</form>';			
		$to_return .= '</div>';
	$to_return .= '</div>';

	echo $to_return;
	exit;
}
else if($req == 2)
{
	session_start();
	$type = trim($_POST['msgType']);
	$is_draft = trim($_POST['isDraft']);
	$subject = trim(stripslashes(rawurldecode($_POST['subject'])));
	$content = trim(stripslashes(rawurldecode($_POST['msg'])));
	$is_edit = trim($_POST['isEdit']);
	$notification_id = trim($_POST['msgID']);
	$participant_list = trim(stripslashes(rawurldecode($_POST['participantsList'])));
	$notification_status = 0; //processing
	$created_by = $_SESSION['userID'];
	$last_update_user = $_SESSION['userID'];
	$user_name = $_SESSION['username'];
	$dt = Carbon::now($_SESSION['churchTimeZone']);
	$last_updated_time = $dt->toDateTimeString();

	$participant_details = array();
	if($participant_list != '')
	{
		$participant_list = explode(',', $participant_list);
		if(is_array($participant_list)) 
		{
			$total_participants = COUNT($participant_list);
			if($total_participants > 0)
			{
				for($i=0; $i<$total_participants; $i++)
				{
					$participants = explode("<:|:>", $participant_list[$i]);
					$participant_details[$participants[0]][] = array($participants[1]);
				}
			}
		}
	}
	
	$notification_obj = new Notification($APPLICATION_PATH);
	if(!$is_edit) {
		$status = $notification_obj->addMassNotification($type, $subject, $content, $is_draft, $created_by, $last_update_user, $last_updated_time, $notification_status, $participant_details);
	} else {
		$status = $notification_obj->updateMassNotification($notification_id, $type, $subject, $content, $is_draft, $created_by, $last_update_user, $last_updated_time, $notification_status, $participant_details);
	}

	$to_return = array("rsno"=>$status[0], "msg"=>$status[1], "notificationID"=>$notification_id);
	$json = new Services_JSON();
	$encode_obj = $json->encode($to_return);
	unset($json);

	echo $encode_obj;
	exit;
}
else if($req == 3)
{
	//list all messages

	$filter_by_drafts = trim($_POST['filterByDraft']);
	$filter_by_sent_items = trim($_POST['filterBySentItems']);
	$filter_by_notification_type = trim($_POST['filterByNotificationType']);
	$isReqFromDraft = (($filter_by_drafts)?true:false);

	$notification_obj = new Notification($APPLICATION_PATH);
	$messages = $notification_obj->getAllMassNotification($filter_by_drafts, $filter_by_sent_items, $filter_by_notification_type);
	
	$is_results_available = false;
	if(is_array($messages) && $messages[0] == 1)
	{
		$messages = $messages[1];
		$total_message = COUNT($messages);
		if($total_message > 0)
		{
			$is_results_available = true;
			for($i=0; $i<$total_message; $i++)
			{
				$notification_id = $messages[$i][0];
				$notification_type = '<span class="label label-info">'.(($messages[$i][1] == 1)?'Email':'SMS').'</span>';
				$subject = (($messages[$i][2] == '')?'-':$messages[$i][2]);
				$content = $messages[$i][3];
				$is_draft = $messages[$i][4];
				$status = '<span class="label label-info">'.(($messages[$i][8] == 0)?'Sending...':'Sent').'</span>';
				
				

				if($filter_by_drafts) {
					$actions = '<i class="curHand icon-pencil" onclick="getComposeMessageForm('.$messages[$i][1].', 1, '.$notification_id.');"></i>&nbsp;&nbsp;<i class="curHand icon-trash" onclick="deleteMessageConfirmation('.$notification_id.', '.$isReqFromDraft.')"></i>';
					$to_return['aaData'][] = array($notification_type, $subject, $content, $actions);
				} else if($filter_by_sent_items) {
					if($messages[$i][4] == 1) {
						$actions = '<i class="curHand icon-trash" onclick="deleteMessageConfirmation('.$notification_id.','.$isReqFromDraft.', \''.$subject.'\')"></i>';
					}
					$to_return['aaData'][] = array($notification_type, $subject, $content, $status, $actions);
				}
			}
		}
	}
	
	if( !$is_results_available )
	{
		$to_return['aaData'] = array();
	}

	$json = new Services_JSON();
	$encode_obj = $json->encode($to_return);
	unset($json);

	echo $encode_obj;
	exit;
}
else if($req == 4)
{
	//delete the message

	$notification_id = trim($_POST['msgID']);

	$notification_obj = new Notification($APPLICATION_PATH);
	$to_return = $notification_obj->deleteMassNotificationDetails($notification_id);
	
	$json = new Services_JSON();
	$encode_obj = $json->encode($to_return);
	unset($json);

	echo $encode_obj;
	exit;
}
else if($req == 5)
{
	$notification_id = trim($_POST['msgID']);
		
	$notification_obj = new Notification($APPLICATION_PATH);
	$notification_details = $notification_obj->getMassNotificationInformation($notification_id);
	
	$json = new Services_JSON();
	$encode_obj = $json->encode($notification_details);
	unset($json);

	echo $encode_obj;
	exit;
}
else if($req == 6)
{
	$is_edit = trim($_POST['isEdit']);
	$template_id = trim($_POST['templateID']);
	$template_type = trim($_POST['templateType']);
	
	$to_return = '';
	$to_return .= '<div class="row-fluid">';
		$to_return .= '<div class="span10">';
			$to_return .= '<form class="form-horizontal" onsubmit="return false;">';
				$to_return .= '<div class="control-group">';
				$to_return .= '<label class="control-label" for="inputTemplateType">Create Template For</label>';
					$to_return .= '<div class="controls">';
						$to_return .= '<select id="inputTemplateType" onchange="onChangeTemplateType();"><option value="1">Email</option><option value="2" '.(($template_type == 2)?"selected":"").'>SMS</option></select>';			
					$to_return .= '</div>';
				$to_return .= '</div>';
				$to_return .= '<div class="control-group">';
				$to_return .= '<label class="control-label" for="inputTemplateName">Name</label>';
					$to_return .= '<div class="controls">';
						$to_return .= '<input type="text" class="span12" id="inputTemplateName" value="'.$template_name.'" placeholder="Template Name">';
					$to_return .= '</div>';
				$to_return .= '</div>';
				$to_return .= '<div class="control-group" id="divSubject" style="display:'.(($template_type == 1)?"":"none").'">';
				$to_return .= '<label class="control-label" for="inputSubject">Subject</label>';
					$to_return .= '<div class="controls">';
						$to_return .= '<input type="text" class="span12" id="inputSubject" value="'.$template_subject.'" placeholder="Subject">';
					$to_return .= '</div>';
				$to_return .= '</div>';
				$to_return .= '<div class="control-group" id="divEmailMessage" style="display:'.(($template_type == 1)?"":"none").'">';
				$to_return .= '<label class="control-label" for="inputEmailMessage">Message</label>';
					$to_return .= '<div class="controls">';
						$to_return .= '<div id="inputEmailMessage" value="'.$template_msg.'" placeholder="Your Message"></div>';
					$to_return .= '</div>';
				$to_return .= '</div>';
				$to_return .= '<div class="control-group" id="divSMSMessage" style="display:'.(($template_type == 1)?"none":"").'">';
				$to_return .= '<label class="control-label" for="inputSMSMessage">Message</label>';
					$to_return .= '<div class="controls">';
						$to_return .= '<textarea id="inputSMSMessage" placeholder="Your Message (160 characters)" rows="5" class="span12" onkeyup="calculateSMSRemainingChars();" onkeydown="calculateSMSRemainingChars();">'.$template_msg.'</textarea> &nbsp<span id="spanAllowedCharText" class="pull-right muted">160</span>';
					$to_return .= '</div>';
				$to_return .= '</div>';
				$to_return .= '<div class="control-group">';
					$to_return .= '<div class="controls">';
						$to_return .= '<div class="pull-left">';
							$to_return .= '<button class="btn btn-small btn-info" onclick="createOrUpdateTemplate();"><i class="icon-white icon-file" style="margin-top:2px;"></i>&nbsp;'.(($is_edit)?"Update Template":"Create New Template").'</button>&nbsp;';
							$to_return .= '<button class="btn btn-small btn-danger" onclick="discardTemplateConfirmation();"><i class="icon-white icon-trash" style="margin-top:2px;"></i>&nbsp;Discard</button>';
							$to_return .= '<input type="hidden" id="smsAllowedCharLength" value="160" />';
							$to_return .= '<input type="hidden" id="templateID" value="'.$template_id.'" />';
							$to_return .= '<input type="hidden" id="hiddenIsEdit" value="'.$is_edit.'" />';
						$to_return .= '</div>';												
					$to_return .= '</div>';
				$to_return .= '</div>';
				
			$to_return .= '</form>';			
		$to_return .= '</div>';
	$to_return .= '</div>';

	echo $to_return;
	exit;
}
else if($req == 7)
{
	session_start();
	$type = trim($_POST['templateType']);
	$name = trim(stripslashes(rawurldecode($_POST['templateName'])));
	$subject = trim(stripslashes(rawurldecode($_POST['subject'])));
	$content = trim(stripslashes(rawurldecode($_POST['msg'])));
	$is_edit = trim($_POST['isEdit']);
	$template_id = trim($_POST['templateID']);
	$created_by = $_SESSION['userID'];
	$last_update_user = $_SESSION['userID'];
	$user_name = $_SESSION['username'];
	$dt = Carbon::now($_SESSION['churchTimeZone']);
	$last_updated_time = $dt->toDateTimeString();

	$notification_obj = new Notification($APPLICATION_PATH);
	if(!$is_edit) {
		$status = $notification_obj->isTemplateNameExists($template_name);
		if($status[0] == 1 && $status[2] == 0) {
			$status = $notification_obj->createTemplate($type, $name, $subject, $content, $created_by, $last_update_user, $last_updated_time);
		}
	} else {
		$status = $notification_obj->updateTemplate($template_id, $type, $name, $subject, $content, $last_update_user, $last_updated_time);
	}

	$to_return = array("rsno"=>$status[0], "msg"=>$status[1]);
	$json = new Services_JSON();
	$encode_obj = $json->encode($to_return);
	unset($json);

	echo $encode_obj;
	exit;
}
else if($req == 8)
{
	$template_id = trim($_POST['templateID']);
		
	$notification_obj = new Notification($APPLICATION_PATH);
	$template_details = $notification_obj->getTemplateInformation($template_id);
	
	$json = new Services_JSON();
	$encode_obj = $json->encode($template_details);
	unset($json);

	echo $encode_obj;
	exit;
}
else if($req == 9)
{
	//list all templates

	$filter_by_template_type = trim($_POST['filterByTemplateType']);
	
	$notification_obj = new Notification($APPLICATION_PATH);
	$templates = $notification_obj->getAllTemplates($filter_by_template_type);
	
	$is_results_available = false;
	if(is_array($templates) && $templates[0] == 1)
	{
		$templates_list = $templates[1];
		$total_template = COUNT($templates_list);
		if($total_template > 0)
		{
			$is_results_available = true;
			for($i=0; $i<$total_template; $i++)
			{
				$template_id = $templates_list[$i][0];
				$template_type = '<span class="label label-info">'.(($templates_list[$i][1] == 1)?'Email':'SMS').'</span>';
				$name = (($templates_list[$i][2] == '')?'-':$templates_list[$i][2]);
				$subject = ((trim($templates_list[$i][3]) == '')?'-':$templates_list[$i][3]);
				$content = $templates_list[$i][4];
				
				$actions = '<i class="curHand icon-pencil" onclick="getAddOrEditTemplateForm('.$templates_list[$i][1].', 1, '.$template_id.');"></i>&nbsp;&nbsp;<i class="curHand icon-trash" onclick="deleteTemplateConfirmation('.$template_id.')"></i>';
				$to_return['aaData'][] = array($template_type, $name, $subject, $content, $actions);
			}
		}
	}
	
	if( !$is_results_available )
	{
		$to_return['aaData'] = array();
	}

	$json = new Services_JSON();
	$encode_obj = $json->encode($to_return);
	unset($json);

	echo $encode_obj;
	exit;
}
else if($req == 10)
{
	//delete the template

	$template_id = trim($_POST['templateID']);

	$notification_obj = new Notification($APPLICATION_PATH);
	$to_return = $notification_obj->deleteTemplate($template_id);
	
	$json = new Services_JSON();
	$encode_obj = $json->encode($to_return);
	unset($json);

	echo $encode_obj;
	exit;
}
?>