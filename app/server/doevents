<?php
$APPLICATION_PATH = "../";

//error_reporting(E_ALL);
//ini_set("display_errors", "On");
//This files secures the action being triggered by cross-domain attacks
include $APPLICATION_PATH."utils/validateauth.php";

include $APPLICATION_PATH.'utils/JSON.php';
include_once $APPLICATION_PATH . '/classes/class.events.php';
include_once $APPLICATION_PATH . '/classes/class.profiles.php';
include_once $APPLICATION_PATH . '/classes/class.groups.php';
include_once $APPLICATION_PATH . '/classes/class.recurr.php';
include_once $APPLICATION_PATH."utils/utilfunctions.php";

//process request
$req = $_REQUEST['req'];

if($req == 1)
{
	//get the list of events for the particular period (month)

	include_once $APPLICATION_PATH . '/plugins/carbon/src/Carbon/Carbon.php';
	
	$time_zone = $_SESSION['churchTimeZone'];
//	$dt = Carbon::now($time_zone)->startOfMonth();
//	$start_date = $dt->year."-".$dt->month."-".$dt->day;	
//	$dt = Carbon::now($time_zone)->lastOfMonth();
//	$end_date = $dt->year."-".$dt->month."-".$dt->day;

	$start_date = $_REQUEST['start'];
	$end_date = $_REQUEST['end'];
//	$start_date = date("Y-m-d", $start_time_stamp);
//	$end_date = date("Y-m-d", $end_time_stamp);
//	echo $start_date;
//	$start_date = "2014-03-05";
//	$end_date = "2014-03-25";
	
	$events_obj = new Events($APPLICATION_PATH);
	$event_occurrences = $events_obj->getEventOccurrences($start_date, $end_date, $time_zone);
	//print_r($event_occurrences);
	
	$json = new Services_JSON();
	$encode_obj = $json->encode($event_occurrences);
	unset($json);

	echo $encode_obj;
}
else if($req == 2)
{
	$date_list = array('1st', '2nd', '3rd', '4th', '5th', '6th', '7th', '8th', '9th', '10th', '11th', '12th', '13th', '14th', '15th', '16th', '17th', '18th', '19th', '20th', '21th', '22nd', '23rd', '24th', '25th', '26th', '27th', '28th', '29th', '30th', '31th');
	$day_list = array('Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday');
	$week_list = array('First', 'Second', 'Third', 'Fourth', 'Last');
	$week_list_val = array('1', '2', '3', '4', '-1');
	$month_list = array('January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December');
	$event_repeat_list = array('No', 'Daily', 'Weekly', 'Monthly', 'Yearly');

	$is_update = trim($_POST['isEdit']);
	$event_repeat_count = 1;
	$is_byday_selected = 'checked';
	$participant_row_id = 0;
	$participant_row_id_list = '';
	$participant_list = '';
	if($is_update) {
		$event_id = trim($_POST['eventID']);
		$events_obj = new Events($APPLICATION_PATH);
		$event_details = $events_obj->getEventInformation($event_id);
		print_r($event_details);
		if(is_array($event_details) && COUNT($event_details) > 0)
		{
			$event_title = $event_details[1];
			$event_desc = $event_details[2];
			$event_location = $event_details[3];
			$start_date = $event_details[4];
			$end_date = $event_details[5];			

			if($start_date != '') {
				$start_date = explode("-", $start_date);
				$start_date = $start_date[2].'/'.$start_date[1].'/'.$start_date[0];
			}
			if($end_date != '') {
				$end_date = explode("-", $end_date);
				$end_date = $end_date[2].'/'.$end_date[1].'/'.$end_date[0];
			}
						
			$start_time = $event_details[6];
			$end_time = $event_details[7];

			if(strlen($start_time) > 3) {
				$start_hour = substr($start_time, 0, 2);
				$start_min = substr($start_time, 2, 2);
			} else {
				$start_hour = "0".substr($start_time, 0, 1);
				$start_min = substr($start_time, 1, 2);
			}
			if(strlen($end_time) > 3) {
				$end_hour = substr($end_time, 0, 2);
				$end_min = substr($end_time, 2, 2);
			} else {
				$end_hour = "0".substr($end_time, 0, 1);
				$end_min = substr($end_time, 1, 2);
			}
			$priority = $event_details[9];
			$event_organiser = $event_details[10];
			$access_level = $event_details[11];

			//Get Event Occurrence details from RRULE
			//error_reporting(E_ALL);
			//ini_set("display_errors", "On");
			$freq = 0;
			$rrule = $event_details[8];
			//echo $rrule;
			if($rrule != '')
			{
				$type = 1;
				$recurr_obj = new RecurrInterface($APPLICATION_PATH);
				$recurr_obj->setUp($type);
				$recurr_obj->setRRule($rrule);
				$recurr_obj->getFromRRule();
				$freq_value = $recurr_obj->getFreq();
				//converting recurr object freq value to our system value
				switch($freq_value) {
					case 'YEARLY':
						$freq = 4;
						break;
					case 'MONTHLY':
						$freq = 3;
						 break;
					case 'WEEKLY':
						$freq = 2;
						 break;
					case 'DAILY':
						$freq = 1;
						 break;
					default:
						$freq = 0;
				}
				$event_repeat_count = $recurr_obj->getInterval();
				$event_day = $recurr_obj->getByDay();
				$month_day = $recurr_obj->getByMonthDay();
				$month = $recurr_obj->getByMonth();

				$is_byday_selected = '';
				$is_bymonthday_selected = '';
				if($freq == 3 || $freq == 4)
				{
					if(is_array($event_day) && COUNT($event_day) > 0) {
						$is_byday_selected = 'checked';
					} else {
						$is_bymonthday_selected = 'checked';
					}
				}
				/*
				echo "AAAAA:";
				print_r($event_day);
				echo "BBBBB:";
				print_r($month_day);
				echo "CCCCC:";
				print_r($month);
				*/				
			}

			//Event Participants
			$participant_content = '';			
			if(is_array($event_details[12]))
			{
				$total_participants = COUNT($event_details[12]);
				if($total_participants > 0)
				{						
					$participant_row_id = $total_participants;
					for($i=0; $i<$total_participants; $i++)
					{
						$participant_id = $event_details[12][$i][0];
						$participant_type = $event_details[12][$i][1];
						$participant_name = $event_details[12][$i][2];
						$participant_content .= '<p id="divParticipantRow-'.($i+1).'"><i class="icon-user"></i>&nbsp;'.$participant_name.'&nbsp;<i class="icon-remove-sign curHand" onclick="removeParticipant(\''.($i+1).'\');"></i></p>';
						if($participant_row_id_list != '') {
							$participant_row_id_list .= ',';
						}
						if($participant_list != '') {
							$participant_list .= ',';
						}
						$participant_row_id_list .= $i;
						$participant_list .= $participant_type . ':' . $participant_id;
					}
				}
			}

			//Event Notifications
			if(is_array($event_details[13]) && COUNT($event_details[13]) > 0)
			{
				$email_remainder_hours_selected = '';
				$email_remainder_sms_selected = '';
				$sms_remainder_hours_selected = '';
				$sms_remainder_sms_selected = '';
				for($i=0; $i<COUNT($event_details[13]); $i++)
				{
					$notification_type = $event_details[13][$i][1];
					$notification_period = convertSecondsToHoursOrDays($event_details[13][$i][2]);
					if($notification_type == 1)
					{
						$is_email_remainder_checked = 'checked';
						if($notification_period[0] == 'hours') {
							$email_remainder_hours_selected = 'selected';
						} else {
							$email_remainder_days_selected = 'selected';
						}
						$email_remainder_period_value = $notification_period[1];
					}
					else
					{
						$is_sms_remainder_checked = 'checked';
						if($notification_period[0] == 'hours') {
							$sms_remainder_hours_selected = 'selected';
						} else {
							$sms_remainder_days_selected = 'selected';
						}
						$sms_remainder_period_value = $notification_period[1];
					}					
				}
			}
		}
	}
	
	$to_return = '';

	$to_return .= '<ul class="breadcrumb">';
	  $to_return .= '<li id="eventStepLink-1" class="active">STEP 1: Event Information <span class="divider">/</span></li>';
	  $to_return .= '<li id="eventStepLink-2"><a href="#">STEP 2: Participants/Notifications</a></li>';
	  //$to_return .= '<li id="eventStepLink-3"><a href="#">STEP 3: Notification</a></li>';
	$to_return .= '</ul>';
	$to_return .= '<div class="row-fluid" id="divEventStep-1">';
		$to_return .= '<div class="span6">';
			$to_return .= '<form class="form-horizontal" onsubmit="return false;">';
				$to_return .= '<p class="text-left muted">Event Information</p>';
				$to_return .= '<div class="control-group">';
					$to_return .= '<label class="control-label" for="inputEventTitle">Title</label>';
						$to_return .= '<div class="controls">';
							$to_return .= '<input type="text" class="span10" id="inputEventTitle" placeholder="Event Title" value="'.$event_title.'">';
						$to_return .= '</div>';
				$to_return .= '</div>';
				$to_return .= '<div class="control-group">';
					$to_return .= '<label class="control-label" for="inputEventDesc">Description</label>';
						$to_return .= '<div class="controls">';
							$to_return .= '<textarea class="span10" id="inputEventDesc" placeholder="Event Description">'.$event_desc.'</textarea>';
						$to_return .= '</div>';
				$to_return .= '</div>';
				$to_return .= '<div class="control-group">';
					$to_return .= '<label class="control-label" for="inputEventLocation">Location</label>';
						$to_return .= '<div class="controls">';
							$to_return .= '<input type="text" class="span10" id="inputEventLocation" placeholder="Event Location" value="'.$event_location.'">';
						$to_return .= '</div>';
				$to_return .= '</div>';
				$to_return .= '<div class="control-group">';
					$to_return .= '<label class="control-label" for="inputEventOrangiser">Orangiser</label>';
						$to_return .= '<div class="controls">';
							$to_return .= '<input type="text" class="span10" id="inputEventOrangiser" placeholder="Event Orangiser" value="'.$event_organiser.'">';
						$to_return .= '</div>';
				$to_return .= '</div>';			
			$to_return .= '</form>';
		$to_return .= '</div>';

		$to_return .= '<div class="span6">';
			$to_return .= '<form class="form-horizontal" onsubmit="return false;">';
				$to_return .= '<p class="text-left muted">Event Occurrence</p>';
				$to_return .= '<div class="control-group">';
					$to_return .= '<label class="control-label" for="inputEventStartDate">Start Date</label>';
						$to_return .= '<div class="controls">';
							$to_return .= '<input type="text" class="span8" id="inputEventStartDate" placeholder="Start Date" value="'.$start_date.'" data-date-format="dd/mm/yyyy" >';
						$to_return .= '</div>';
				$to_return .= '</div>';				
				$to_return .= '<div class="control-group">';
					$to_return .= '<label class="control-label" for="inputEventFromTimeHour">From Time</label>';
						$to_return .= '<div class="controls">';
							$to_return .= '<select class="span4" id="inputEventFromTimeHour">';
								for($i=0; $i<=23; $i++) 
								{
									$text_to_show = ((strlen($i) == 1)?"0".$i:$i);
									$is_selected = '';
									if($is_update && $start_hour == $i) {
										$is_selected = 'selected';
									} else if($i == 10) {
										$is_selected = 'selected';										
									}
									$to_return .= '<option value="'.$i.'" '.$is_selected.'>'.$text_to_show.'</option>';
								}
							$to_return .= '</select>';
							$to_return .= '&nbsp;&nbsp;&nbsp;';
							$to_return .= '<select class="span4" id="inputEventFromTimeMin">';
								for($i=0; $i<=59; $i++) 
								{
									$text_to_show = ((strlen($i) == 1)?"0".$i:$i);
									$is_selected = '';
									if($is_update && $start_min == $i) {
										$is_selected = 'selected';
									} else if($i == 0) {
										$is_selected = 'selected';										
									}
									$to_return .= '<option value="'.$i.'" '.$is_selected.'>'.$text_to_show.'</option>';
								}
							$to_return .= '</select>';
						$to_return .= '</div>';
				$to_return .= '</div>';
				$to_return .= '<div class="control-group">';
					$to_return .= '<label class="control-label" for="inputEventToTimeHour">To Time</label>';
						$to_return .= '<div class="controls">';
							$to_return .= '<select class="span4" id="inputEventToTimeHour">';
								for($i=0; $i<=23; $i++) 
								{
									$text_to_show = ((strlen($i) == 1)?"0".$i:$i);
									$is_selected = '';
									if($is_update && $end_hour == $i) {
										$is_selected = 'selected';
									} else if($i == 11) {
										$is_selected = 'selected';										
									}
									$to_return .= '<option value="'.$i.'" '.$is_selected.'>'.$text_to_show.'</option>';
								}
							$to_return .= '</select>';
							$to_return .= '&nbsp;&nbsp;&nbsp;';
							$to_return .= '<select class="span4" id="inputEventToTimeMin">';
								for($i=0; $i<=59; $i++) 
								{
									$is_selected = '';
									if($is_update && $end_min == $i) {
										$is_selected = 'selected';										
									} else if($i == 0) {
										$is_selected = 'selected';
									}
									$text_to_show = ((strlen($i) == 1)?"0".$i:$i);
									$to_return .= '<option value="'.$i.'" '.$is_selected.'>'.$text_to_show.'</option>';
								}
							$to_return .= '</select>';
						$to_return .= '</div>';
				$to_return .= '</div>';
				$to_return .= '<div class="control-group">';
					$to_return .= '<label class="control-label" for="inputEventRepeats">Repeats</label>';
						$to_return .= '<div class="controls">';
							$to_return .= '<select class="span8" id="inputEventRepeats" onchange="onchangeEventRepeats(this);">';
							for($i=0; $i<COUNT($event_repeat_list); $i++) {
								$is_selected = '';
								if($is_update && $freq == $i)								{
									$is_selected = 'selected';										
								}
								$to_return .= '<option value="'.($i+1).'"'. $is_selected .' >'.$event_repeat_list[$i].'</option>';
							}
							$to_return .= '</select>';
						$to_return .= '</div>';
				$to_return .= '</div>';
				$to_return .= '<div class="control-group" id="divOuterEventEvery" style="display:'. (($is_update && $freq > 0)?"":"none") .'">';
					$to_return .= '<label class="control-label" for="inputEventEvery">Every</label>';
						$to_return .= '<div class="controls" id="divInnerEventEvery">';
							$to_return .= '<input type="text" class="span4" placeholder="" id="inputEventEvery" value="'.$event_repeat_count.'"/>&nbsp;<span id="spanEventEveryText"></span>';
						$to_return .= '</div>';
				$to_return .= '</div>';
				$to_return .= '<div class="control-group" id="divOuterEventOccursOn" style="display:'. (($is_update && $freq > 1)?"":"none") .'">';
					$to_return .= '<label class="control-label" for="inputEventOccursOn">Occurs On</label>';
						$to_return .= '<div class="controls">';
							$to_return .= '<div class="row-fluid" id="divInnerEventOccursOn_1" style="display:'.(($is_update && $freq == 2)?"":"none").'">';
								$to_return .= '<div class="span12">';
									for($i=0; $i<COUNT($day_list); $i++)
									{
										$is_checked = '';
										if($is_update && $freq == 2) {
											if(strtoupper(substr($day_list[$i], 0, 2)) == $event_day[$i]) {
												$is_checked = 'checked';
											}
										}
										$to_return .= '<input type="checkbox" id="day'.$i.'" '.$is_checked.'>&nbsp;'.$day_list[$i].'<BR>';
									}									
								$to_return .= '</div>';
							$to_return .= '</div>';

							$to_return .= '<div class="row-fluid" id="divInnerEventOccursOn_2" style="display:'.(($is_update && ($freq == 3 || $freq == 4))?"":"none").'">';
								$to_return .= '<div class="span12">';
									$to_return .= '<table>';
										$to_return .= '<tr id="rowDateList">';
											$to_return .= '<td><input type="radio" name="radOccursOn" id="radOccursOn_1" '.$is_bymonthday_selected.' onclick="OnChangeOccursOn(1);"></td>';
											$to_return .= '<td><select class="span4" id="monthDay" '.(($is_bymonthday_selected != '')?"":"disabled").'>';
												for($i=0; $i<COUNT($date_list); $i++)
												{
													$is_selected = '';
													if($is_update && $month_day[0] == $i+1) {
														$is_selected = 'selected';
													}
													$to_return .= '<option value="'.($i+1).'" '.$is_selected.'>'.$date_list[$i]	.'</option>';
												}
											$to_return .= '</select></td>';
										$to_return .= '</tr>';
										$to_return .= '<tr id="rowWeekList">';
											$to_return .= '<td><input type="radio" name="radOccursOn" id="radOccursOn_2" '.$is_byday_selected.' onclick="OnChangeOccursOn(2);"></td>';
											$to_return .= '<td><select id="weekNumber" class="span6" '.(($is_byday_selected != '')?"":"disabled").'>';
												for($i=0; $i<COUNT($week_list); $i++)
												{
													$is_checked = '';
													//echo substr($event_day[0], 0, 1)."::".$week_list_val[$i];
													if(substr($event_day[0], 0, 1) == $week_list_val[$i]) {
														$is_checked = 'selected';
													}
													$to_return .= '<option value="'.($i+1).'" '.$is_checked.'>'.$week_list[$i]	.'</option>';
												}
											$to_return .= '</select>';
											$to_return .= '&nbsp;<select id="weekDay" class="span6" '.(($is_byday_selected != '')?"":"disabled").'>';
												for($i=0; $i<COUNT($day_list); $i++)
												{
													$is_checked = '';
													//echo strtoupper(substr($day_list[$i], 0, 2))."::".substr($event_day[0], 1, 3);
													if(strtoupper(substr($day_list[$i], 0, 2)) == substr($event_day[0], 1, 3)) {
														$is_checked = 'selected';
													}
													$to_return .= '<option value="'.($i+1).'" '.$is_checked.'>'.$day_list[$i]	.'</option>';
												}
											$to_return .= '</select>';
											$to_return .= '</td>';
										$to_return .= '</tr>';
										$to_return .= '<tr id="rowMonthList" style="display:'.(($is_update && $freq == 4)?"":"none").'">';
											$to_return .= '<td></td>';
											$to_return .= '<td colspan="2"><select id="month">';
												for($i=0; $i<COUNT($month_list); $i++)
												{												
													$is_selected = '';
													if($is_update && $month[0] == $i+1) {
														$is_selected = 'selected';
													}
													$to_return .= '<option value="'.($i+1).'" '.$is_selected.'>'.$month_list[$i]	.'</option>';
												}
											$to_return .= '</select></td>';
										$to_return .= '</tr>';
									$to_return .= '</table>';
								$to_return .= '</div>';
							$to_return .= '</div>';

						$to_return .= '</div>';
				$to_return .= '</div>';
				$is_end_date_available = (($end_date != '00/00/0000')?1:0);
				$to_return .= '<div class="control-group" id="divOuterEventEndDate" style="display:'.(($is_update && $freq > 0)?"":"none").'">';
					$to_return .= '<label class="control-label" for="inputEventEndDate">End Date</label>';
						$to_return .= '<div class="controls" id="divInnerEventEndDate">';
							$to_return .= '<input type="text" class="span8" id="inputEventEndDate" placeholder="End Date" value="'.$end_date.'" data-date-format="dd/mm/yyyy" '.(($is_end_date_available)?"":"disabled").' /><BR>';
							$to_return .= '<input type="checkbox" id="inputNoEventEndDate" onclick="((this.checked == true)?(document.getElementById(\'inputEventEndDate\').disabled = true):(document.getElementById(\'inputEventEndDate\').disabled = false))" '.(($is_end_date_available)?"":"checked").' />&nbsp;No End Date';
						$to_return .= '</div>';
				$to_return .= '</div>';
				/*
				$to_return .= '<div class="control-group">';
					//$to_return .= '<label class="control-label" for="inputEventEndDate">End Date</label>';
						$to_return .= '<div class="controls">';
							$to_return .= '<input type="checkbox" id="" />&nbsp;No End Date';
						$to_return .= '</div>';
				$to_return .= '</div>';
				*/
				$to_return .= '</form>';
			$to_return .= '</div>';
		$to_return .= '</div>';
	$to_return .= '</div>';
		
	$to_return .= '<div class="row-fluid" id="divEventStep-2" style="display:none;">';
		$to_return .= '<div class="span6">';
			$to_return .= '<form class="form-horizontal" onsubmit="return false;">';				
				$to_return .= '<p class="text-left muted">Event Participants</p>';
				$to_return .= '<div class="control-group">';
					$to_return .= '<label class="control-label" for="inputAddEventParticipant">Participants</label>';
					$to_return .= '<div class="controls">';
						$to_return .= '<input type="text" id="inputAddEventParticipant" data-provide="typeahead" autocomplete="off" value="" placeholder="Start type profile/group name" />';
						//$to_return .= '<HR>';
						$to_return .= '<input type="hidden" id="maxParticipantRowID" value="'.$participant_row_id.'" />';
						$to_return .= '<input type="hidden" id="participantRowIDList" value="'.$participant_row_id_list.'" />';
						$to_return .= '<input type="hidden" id="participantList" value="'.$participant_list.'" />';
					$to_return .= '</div>';	
				$to_return .= '</div>';
				$to_return .= '<div class="control-group">';
					$to_return .= '<div class="controls" id="participantsDiv">';
						if($is_update && $participant_content != '') {
							$to_return .= $participant_content;
						} else {
							$to_return .= '<span class="muted" id="spanNoParticipants">No participants added yet.</span>';
						}
					$to_return .= '</div>';	
				$to_return .= '</div>';
			$to_return .= '</form>';
		$to_return .= '</div>';
		$to_return .= '<div class="span6">';
			$to_return .= '<form class="form-horizontal" onsubmit="return false;">';				
				$to_return .= '<p class="text-left muted">Event Notifications <input type="checkbox" id="inputEventNotifications" style="display:none;"/></p>';
				
				$to_return .= '<div class="control-group">';
					$to_return .= '<label class="control-label" for="checkEmailReminder"><input type="checkbox" id="checkEmailReminder" '.$is_email_remainder_checked.' />&nbsp;Email Reminder</label>';
					$to_return .= '<div class="controls">';
						$to_return .= '<input type="text" id="inputRemainderPeriod1" class="input-mini" onblur="validateEventRemainder(1);" value="'.$email_remainder_period_value.'" />&nbsp;';
						$to_return .= '<select id="inputRemainderType1" class="input-small">';
							$to_return .= '<option value="1" '.$email_remainder_hours_selected.'>Hours</option>';
							$to_return .= '<option value="2" '.$email_remainder_days_selected.'>Days</option>';
						$to_return .= '</select>';
					$to_return .= '</div>';	
				$to_return .= '</div>';
				$to_return .= '<div class="control-group" style="display:;">';
					$to_return .= '<label class="control-label" for="checkSMSReminder"><input type="checkbox" id="checkSMSReminder" '.$is_sms_remainder_checked.' />&nbsp;SMS Reminder&nbsp;&nbsp;</label>';
					$to_return .= '<div class="controls">';
						$to_return .= '<input type="text" id="inputRemainderPeriod2" class="input-mini" onblur="validateEventRemainder(2);" value="'.$sms_remainder_period_value.'" />&nbsp;';
						$to_return .= '<select id="inputRemainderType2" class="input-small">';
							$to_return .= '<option value="1" '.$sms_remainder_hours_selected.'>Hours</option>';
							$to_return .= '<option value="2" '.$sms_remainder_days_selected.'>Days</option>';
						$to_return .= '</select>';
					$to_return .= '</div>';	
				$to_return .= '</div>';
			$to_return .= '</form>';
		$to_return .= '</div>';
	$to_return .= '</div>';

	$to_return .= '<div class="row-fluid">';
		$to_return .= '<div class="span12">';
			$to_return .= '<div class="form-actions" align="center">';
				$to_return .= '<button id="btnPreviousStep" class="btn btn-primary" onclick="showpreviousEventStep('.$is_update.');" style="display:none;">Previous</button>&nbsp;';
				$to_return .= '<button id="btnNextStep" class="btn btn-primary" onclick="showNextEventStep('.$is_update.');">Next</button>&nbsp;';
				$to_return .= '<button id="btnSaveEvent" class="btn btn-primary" onclick="addOrUpdateEvents('.$is_update.', 0);" style="display:none;">'.(($is_update)?"Update Event":"Create Event").'</button>&nbsp;';
				$to_return .= '<input type="hidden" id="currentEventStep" value="1" />';
				$to_return .= '<input type="hidden" id="hiddenEventID" value="'.$event_id.'" />';
			$to_return .= '</div>';
		$to_return .= '</div>';
	$to_return .= '</div>';
	
	echo $to_return;
	exit;
}
else if($req == 3)
{
	$is_update	= trim($_POST['isUpdate']);
	$event_id	= trim($_POST['eventID']);
	$title		= trim(stripslashes(rawurldecode($_POST['title'])));
	$description= trim(stripslashes(rawurldecode($_POST['desc'])));
	$location	= trim(stripslashes(rawurldecode($_POST['location'])));
	$start_date	= trim($_POST['startDate']);
	$end_date	= trim($_POST['endDate']);
	$start_time	= trim($_POST['startTime']);
	$end_time	= trim($_POST['endTime']);
	$organiser	= trim(stripslashes(rawurldecode($_POST['organiser'])));
	$priority	= 0;
	$access_level= 0;

	$freq		= trim($_POST['freq']);
	$interval	= trim($_POST['interval']);
	$day		= trim($_POST['day']);
	$month_day	= trim($_POST['monthDay']);
	$month		= trim($_POST['month']);

	//event participants
	$participant_details = array();
	$participant_list = trim($_POST['participantList']);
	if($participant_list != '')
	{
		$participant_list = explode(',', $participant_list);
		if(is_array($participant_details)) 
		{
			$total_participants = COUNT($participant_list);
			if($total_participants > 0)
			{
				for($i=0; $i<$total_participants; $i++)
				{
					$participants = explode(":", $participant_list[$i]);
					$participant_details[] = array($participants[0], $participants[1]);
				}
			}
		}
	}

	//event notifications
	$notification_details = array();
	/*********************************************************************************************** /
	LOGIC MODIFIED BY NESAN
	/*********************************************************************************************** /
	$notifications = explode(',', trim($_POST['notifications']));
	for($i=0; $i<2; $i++)
	{
		if($notifications[$i] != 0) {
			$notification_details[] = array(($i+1), $notifications[$i]);
		}
	}	
	/************************************************************************************************/
	if(trim($_POST['emailnotificationperiod']) != "" && trim($_POST['emailnotificationperiod']) > 0) {
		$notification_details[] = array(1, trim($_POST['emailnotificationperiod']));
	}
	if(trim($_POST['smsnotificationperiod']) != "" && trim($_POST['smsnotificationperiod']) > 0) {
		$notification_details[] = array(2, trim($_POST['smsnotificationperiod']));
	}
	/************************************************************************************************/
	
	if($freq == 1)
	{
		//no repeat
		$rrule = '';
	}
	else if($freq == 2)
	{
		//daily
		$freq_str = 'DAILY';
	}
	else if($freq == 3)
	{
		//monthly
		$freq_str = 'WEEKLY';
	}
	else if($freq == 4)
	{
		//yearly
		$freq_str = 'MONTHLY';
	}
	else if($freq == 5)
	{
		//yearly
		$freq_str = 'YEARLY';
	}

	if($freq != 1) 
	{
		$type = 1;
		$end_date_time = '';
		if($end_date != '0000-00-00')
		{
			$end_date_time = $end_date . ' 23:59:00';
			$end_date_time = new \DateTime($end_date_time, new \DateTimeZone($_SESSION['churchTimeZone']));
		}

		$recurr_obj = new RecurrInterface($APPLICATION_PATH);
		$recurr_obj->setUp($type);
		$recurr_obj->setFreq($freq_str);
		$recurr_obj->setInterval($interval);
		if($end_date != '0000-00-00') {
			$recurr_obj->setUntil($end_date_time);
		}
		
		if($freq == 3 || $freq == 4 || $freq == 5) {
			if($freq == 3) {
				$recurr_obj->setByDay(explode(',', $day));
			} else {
				if($month_day == "") {
					$recurr_obj->setByDay(explode(',', $day));
					if($freq == 5) {
						$recurr_obj->setByMonth(explode(',', $month));
					}
				} else {
					$recurr_obj->setByMonthDay(explode(',', $month_day));
				}
			}
		}
		$rrule = $recurr_obj->getRRule();
	}

	//echo $rrule;exit;
	$events_obj = new Events($APPLICATION_PATH);
	if(!$is_update) {
		$status = $events_obj->addEvent($title, $description, $location, $start_date, $end_date, $start_time, $end_time, $rrule, $priority, $organiser, $access_level, $participant_details, $notification_details);
	} else {
		$events_obj->event_id = $event_id;
		$status = $events_obj->updateEvent($title, $description, $location, $start_date, $end_date, $start_time, $end_time, $rrule, $priority, $organiser, $access_level, $participant_details, $notification_details);
	}

	$json = new Services_JSON();
	$encode_obj = $json->encode($status);
	unset($json);

	echo $encode_obj;
	exit;
}
else if($req == 4)
{
	//show events tab

	$to_return = '';
	$to_return .= '<div class="tabbable">';
		$to_return .= '<ul class="nav nav-tabs">';
			$to_return .= '<li id="upcomingEventsTab" class="active" onclick="listAllEvents(1, 0);"><a href="#upcomingEventsTab" data-toggle="tab">Upcoming Events</a></li>';
			$to_return .= '<li id="pastEventsTab" onclick="listAllEvents(2, 0);"><a href="#pastEventsTab" data-toggle="tab">Past Events</a></li>';
		$to_return .= '</ul>';
		$to_return .= '<div class="tab-content">';
			$to_return .= '<div class="tab-pane active" id="upcomingEventsDiv">';
			$to_return .= '</div>';
			$to_return .= '<div class="tab-pane" id="pastEventsDiv">';
			$to_return .= '</div>';
		$to_return .= '</div>';
	$to_return .= '</div>';

	echo $to_return;
	exit;
}
else if($req == 5)
{
	//list all events

	$list_all_events = true;
	$start_date = "";
	//$end_date = "";

	//upcoming events - 1;
	//past events - 2;
	$event_status = trim($_POST['eventStatus']);

	include_once $APPLICATION_PATH . '/plugins/carbon/src/Carbon/Carbon.php';
	include_once $APPLICATION_PATH . '/classes/class.recurr.php';

	$time_zone = $_SESSION['churchTimeZone'];
	$dt = Carbon::now($time_zone);
	$today = $dt->year."-".$dt->month."-".$dt->day;
	$today_with_time = $today." ".$dt->hour.":".$dt->minute.":".$dt->second;
	
	$events_obj = new Events($APPLICATION_PATH);
	$event_details = $events_obj->getAllEvents($list_all_events, $start_date, $today, $start_time, $end_time, $event_status);
	//print_r($event_details);

	$is_results_available = false;
	if(is_array($event_details))
	{
		$total_events = COUNT($event_details);
		if($total_events > 0)
		{
			$is_results_available = true;			

			// Recurr Transformer Initialization
			$type = 2;
			$is_obj_initialized = true;
			$recurr_obj = new RecurrInterface($APPLICATION_PATH);
			$recurr_obj->setUp($type);
			$recurr_obj->setTimeZone($time_zone);

			for($i=0; $i<$total_events; $i++) {
				
				$actions = '<div class="dropdown">';
					$actions .= '<i class="curHand icon-pencil" onclick="getAddOrEditEventForm(1, '.$event_details[$i][0].')"></i>&nbsp;';
					$actions .= '<i class="curHand icon-trash" onclick="deleteEventConfirmation('.$event_details[$i][0].', \''.$event_details[$i][1].'\')"></i>&nbsp;&nbsp;';
				$actions .= '</div>';

				//find the next immediate event occurrence
				$next_event_date = '-';
				$virtualLimit = 1;
				$start_date = $event_details[$i][4];
				$end_date = $event_details[$i][5];
				$start_time = convertRailwayTimeToFullTime($event_details[$i][6]);
				$end_time = convertRailwayTimeToFullTime($event_details[$i][7]);
				$rrule = $event_details[$i][8];				
				if($rrule != '') {
					$next_event_date = $events_obj->getNextImmediateEventDate($is_obj_initialized, $recurr_obj, $start_date, $end_date, $start_time, $end_time, $time_zone, $rrule, $virtualLimit, $today_with_time);					
				}

				if($event_status == 1) {
					$to_return['aaData'][] = array($event_details[$i][1], $event_details[$i][2], $start_date, $end_date, $next_event_date, $event_details[$i][3], $event_details[$i][10], $actions);
				} else {
					$to_return['aaData'][] = array($event_details[$i][1], $event_details[$i][2], $start_date, $end_date, $event_details[$i][3], $event_details[$i][10], $actions);
				}
			}
		}
	}

	if( !$is_results_available )
	{
		$to_return['aaData'] = array();
	}

	$json = new Services_JSON();
	$encode_obj = $json->encode($to_return);
	unset($json);

	echo $encode_obj;
	exit;	
}
else if($req == 6)
{
	$event_id = trim($_POST['eventID']);

	$events_obj = new Events($APPLICATION_PATH);
	$events_obj->event_id = $event_id;
	$status = $events_obj->deleteEvent();
	echo $status;
	exit;
}
else if($req == 7)
{
	//load individual participants and groups

	$participants_list = array();
	$profiles_obj = new Profiles($APPLICATION_PATH);
	$ignore_email_id = true;
	$email_list = $profiles_obj->getAllProfileNameAndEmailIDs($ignore_email_id);

	$groups_obj = new Groups($APPLICATION_PATH);
	$groups = $groups_obj->getAllGroups();
	
	$participants_list = array($email_list, $groups);
	$json = new Services_JSON();
	$encode_obj = $json->encode($participants_list);
	unset($json);

	echo $encode_obj;
	exit;	
}
?>