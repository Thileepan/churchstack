
create table IF NOT EXISTS SMS_PROVIDERS (
	SMS_PROVIDER_ID SMALLINT UNSIGNED NOT NULL,
	SMS_PROVIDER_NAME VARCHAR(128),
	SMS_PROVIDER_WEBSITE VARCHAR(128),
	constraint SMS_PROVIDERS_PK PRIMARY KEY (SMS_PROVIDER_ID)
);

create table IF NOT EXISTS TWILIO_CONFIGURATION (
	CONFIG_ID SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT UNIQUE,
	ACCOUNT_SID VARCHAR(128),
	AUTH_TOKEN VARCHAR(128),
	FROM_NUMBER VARCHAR(16),
	STATUS TINYINT UNSIGNED,

	constraint TWILIO_CONFIGURATION_PK PRIMARY KEY (ACCOUNT_SID, AUTH_TOKEN, FROM_NUMBER)
);

create table IF NOT EXISTS NEXMO_CONFIGURATION (
	CONFIG_ID SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT UNIQUE,
	API_KEY VARCHAR(128),
	API_SECRET VARCHAR(128),
	FROM_NUMBER VARCHAR(16),
	STATUS TINYINT UNSIGNED,

	constraint TWILIO_CONFIGURATION_PK PRIMARY KEY (API_KEY, API_SECRET, FROM_NUMBER)
);

create table IF NOT EXISTS BHASHSMS_CONFIGURATION (
	CONFIG_ID SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT UNIQUE,
	USERNAME VARCHAR(128),
	PASSWORD VARCHAR(128),
	SENDERID VARCHAR(128),
	PRIORITY VARCHAR(128),
	STATUS TINYINT UNSIGNED,

	constraint BHASHSMS_CONFIGURATION_PK PRIMARY KEY (USERNAME, SENDERID)
);

create table IF NOT EXISTS GLOBAL_CONFIGURATION (
	FEATURE_NAME VARCHAR(64),
	FEATURE_KEY VARCHAR(128),
	FEATURE_INT_VALUE BIGINT,
	FEATURE_STRING_VALUE VARCHAR(256),

	constraint GLOBAL_CONFIGURATION_PK PRIMARY KEY (FEATURE_NAME, FEATURE_KEY)
);

create table IF NOT EXISTS GREETINGS_AUTO_NOTIFY_REPORTS (
	NOTIFICATION_TYPE VARCHAR(64),
	FOR_OCCURRENCE VARCHAR(256),
	UPDATED_ON DATETIME,

	constraint GREETINGS_AUTO_NOTIFY_REPORTS_PK PRIMARY KEY (NOTIFICATION_TYPE, FOR_OCCURRENCE)
);

create table IF NOT EXISTS NOTIFICATIONS_EMAIL_SMS_REPORTS (
	REPORT_ID BIGINT UNSIGNED NOT NULL AUTO_INCREMENT UNIQUE,
	EMAIL_OR_SMS TINYINT UNSIGNED,
	TRIGGERED_FOR VARCHAR(256),
	RAW_CONTENT MEDIUMTEXT,
	SENT_TIME DATETIME,
	RECIPIENTS_COUNT BIGINT,

	index NOTIFICATIONS_EMAIL_SMS_REPORTS_IDX_1 (EMAIL_OR_SMS),
	index NOTIFICATIONS_EMAIL_SMS_REPORTS_IDX_2 (SENT_TIME),
	constraint NOTIFICATIONS_EMAIL_SMS_REPORTS_PK PRIMARY KEY (REPORT_ID)
);

create table IF NOT EXISTS MASS_NOTIFICATION_DETAILS (
	NOTIFICATION_ID BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
	NOTIFICATION_TYPE TINYINT UNSIGNED,
	NOTIFICATION_SUBJECT VARCHAR(1024),
	NOTIFICATION_CONTENT MEDIUMTEXT,
	IS_DRAFT TINYINT UNSIGNED NOT NULL DEFAULT 0,
	CREATED_BY BIGINT UNSIGNED,
	LAST_UPDATE_USER_ID BIGINT UNSIGNED,
	LAST_UPDATE_TIME DATETIME,
	IS_NOTIFICATION_SENT TINYINT UNSIGNED NOT NULL DEFAULT 0,

	index MASS_NOTIFICATION_DETAILS_IDX_1 (NOTIFICATION_TYPE),
	index MASS_NOTIFICATION_DETAILS_IDX_2 (IS_DRAFT),
	index MASS_NOTIFICATION_DETAILS_IDX_3 (IS_NOTIFICATION_SENT),
	index MASS_NOTIFICATION_DETAILS_IDX_4 (LAST_UPDATE_TIME),
	constraint MASS_NOTIFICATION_DETAILS_PK PRIMARY KEY (NOTIFICATION_ID)
);

create table IF NOT EXISTS MASS_NOTIFICATION_PARTICIPANTS (
	NOTIFICATION_ID BIGINT UNSIGNED NOT NULL,
	PARTICIPANT_TYPE TINYINT UNSIGNED,
	PARTICIPANT_ID INTEGER UNSIGNED,

	index EVENT_PARTICIPANTS_IDX_1 (NOTIFICATION_ID),
	index EVENT_PARTICIPANTS_IDX_2 (PARTICIPANT_TYPE),
	index EVENT_PARTICIPANTS_IDX_3 (PARTICIPANT_ID),
	constraint MASS_NOTIFICATION_PARTICIPANTS_FK FOREIGN KEY (NOTIFICATION_ID) REFERENCES MASS_NOTIFICATION_DETAILS(NOTIFICATION_ID)
);

create table IF NOT EXISTS TEMPLATES (
	TEMPLATE_ID INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
	TEMPLATE_TYPE TINYINT UNSIGNED,
	TEMPLATE_NAME VARCHAR(256),
	TEMPLATE_SUBJECT VARCHAR(1024),
	TEMPLATE_CONTENT MEDIUMTEXT,
	CREATED_BY BIGINT UNSIGNED,
	LAST_UPDATE_USER_ID BIGINT UNSIGNED,
	LAST_UPDATE_TIME DATETIME,

	index TEMPLATES_IDX_1 (TEMPLATE_TYPE),
	index TEMPLATES_IDX_2 (TEMPLATE_NAME),
	index TEMPLATES_IDX_3 (LAST_UPDATE_TIME),
	constraint TEMPLATES_PK PRIMARY KEY (TEMPLATE_ID)
);


insert into SMS_PROVIDERS (SMS_PROVIDER_ID, SMS_PROVIDER_NAME, SMS_PROVIDER_WEBSITE) values (1,'Twilio', 'http://www.twilio.com/');
insert into SMS_PROVIDERS (SMS_PROVIDER_ID, SMS_PROVIDER_NAME, SMS_PROVIDER_WEBSITE) values (2,'Nexmo', 'https://www.nexmo.com/');
insert into SMS_PROVIDERS (SMS_PROVIDER_ID, SMS_PROVIDER_NAME, SMS_PROVIDER_WEBSITE) values (3,'BhashSMS', 'http://bhashsms.com');
insert into GLOBAL_CONFIGURATION (FEATURE_NAME, FEATURE_KEY, FEATURE_INT_VALUE, FEATURE_STRING_VALUE) values ('SMS','SMS_ENABLED', 0, '');
insert into GLOBAL_CONFIGURATION (FEATURE_NAME, FEATURE_KEY, FEATURE_INT_VALUE, FEATURE_STRING_VALUE) values ('SMS','SMS_PROVIDER_ID', 0, '');
insert into GLOBAL_CONFIGURATION (FEATURE_NAME, FEATURE_KEY, FEATURE_INT_VALUE, FEATURE_STRING_VALUE) values ('BIRTHDAY_GREETINGS','EMAIL_GREETINGS_ENABLED', 0, '');
insert into GLOBAL_CONFIGURATION (FEATURE_NAME, FEATURE_KEY, FEATURE_INT_VALUE, FEATURE_STRING_VALUE) values ('BIRTHDAY_GREETINGS','EMAIL_GREETINGS_TEMPLATE_ID', 0, '');
insert into GLOBAL_CONFIGURATION (FEATURE_NAME, FEATURE_KEY, FEATURE_INT_VALUE, FEATURE_STRING_VALUE) values ('BIRTHDAY_GREETINGS','SMS_GREETINGS_ENABLED', 0, '');
insert into GLOBAL_CONFIGURATION (FEATURE_NAME, FEATURE_KEY, FEATURE_INT_VALUE, FEATURE_STRING_VALUE) values ('BIRTHDAY_GREETINGS','SMS_GREETINGS_TEMPLATE_ID', 0, '');
insert into GLOBAL_CONFIGURATION (FEATURE_NAME, FEATURE_KEY, FEATURE_INT_VALUE, FEATURE_STRING_VALUE) values ('WEDDING_GREETINGS','EMAIL_GREETINGS_ENABLED', 0, '');
insert into GLOBAL_CONFIGURATION (FEATURE_NAME, FEATURE_KEY, FEATURE_INT_VALUE, FEATURE_STRING_VALUE) values ('WEDDING_GREETINGS','EMAIL_GREETINGS_TEMPLATE_ID', 0, '');
insert into GLOBAL_CONFIGURATION (FEATURE_NAME, FEATURE_KEY, FEATURE_INT_VALUE, FEATURE_STRING_VALUE) values ('WEDDING_GREETINGS','SMS_GREETINGS_ENABLED', 0, '');
insert into GLOBAL_CONFIGURATION (FEATURE_NAME, FEATURE_KEY, FEATURE_INT_VALUE, FEATURE_STRING_VALUE) values ('WEDDING_GREETINGS','SMS_GREETINGS_TEMPLATE_ID', 0, '');
