create table IF NOT EXISTS PROFILE_DETAILS (
	PROFILE_ID INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
	SALUTATION_ID VARCHAR(255),
	NAME VARCHAR(128),
	UNIQUE_ID INTEGER UNSIGNED,
	DOB DATE,
	GENDER TINYINT,
	RELATION_SHIP SMALLINT,
	MARITAL_STATUS TINYINT,
	MARRIAGE_DATE DATE,
	MARRIAGE_PLACE VARCHAR(128),
	ADDRESS1 VARCHAR(128),
	ADDRESS2 VARCHAR(128),
	ADDRESS3 VARCHAR(128),
	AREA VARCHAR(64),
	PINCODE VARCHAR(10),
	LANDLINE VARCHAR(20),
	MOBILE1 VARCHAR(20),
	MOBILE2 VARCHAR(20),
	EMAIL VARCHAR(64),
	PROFILE_STATUS TINYINT DEFAULT 1,
	NOTES VARCHAR(1024),
	BABTISED TINYINT,
	CONFIRMATION TINYINT,
	OCCUPATION VARCHAR(256),
	IS_ANOTHER_CHURCH_MEMBER TINYINT,
	PARENT_PROFILE_ID INTEGER,
	MIDDLE_NAME VARCHAR(128),
	LAST_NAME VARCHAR(128),
	WORK_PHONE VARCHAR(20),
	FAMILY_PHOTO_LOCATION VARCHAR(256),
	PROFILE_PHOTO_LOCATION VARCHAR(256),
	EMAIL_NOTIFICATION TINYINT DEFAULT 1,
	SMS_NOTIFICATION TINYINT DEFAULT 1,

	index PROFILE_DETAILS_IDX_1 (NAME),
	index PROFILE_DETAILS_IDX_2 (UNIQUE_ID),
	index PROFILE_DETAILS_IDX_3 (DOB),
	index PROFILE_DETAILS_IDX_4 (GENDER),
	index PROFILE_DETAILS_IDX_5 (MARITAL_STATUS),
	index PROFILE_DETAILS_IDX_6 (MARRIAGE_DATE),
	index PROFILE_DETAILS_IDX_7 (EMAIL),
	index PROFILE_DETAILS_IDX_8 (PROFILE_STATUS),
	index PROFILE_DETAILS_IDX_9 (BABTISED),
	index PROFILE_DETAILS_IDX_10 (CONFIRMATION),
	index PROFILE_DETAILS_IDX_11 (PARENT_PROFILE_ID),
	index PROFILE_DETAILS_IDX_12 (MIDDLE_NAME),
	index PROFILE_DETAILS_IDX_13 (LAST_NAME),
	index PROFILE_DETAILS_IDX_14 (EMAIL_NOTIFICATION),
	index PROFILE_DETAILS_IDX_15 (SMS_NOTIFICATION),
	constraint PROFILE_DETAILS_PK PRIMARY KEY (PROFILE_ID, UNIQUE_ID)
);

create table IF NOT EXISTS PROFILE_CUSTOM_FIELDS (
	FIELD_ID INTEGER UNSIGNED NOT NULL unique AUTO_INCREMENT,
	FIELD_NAME VARCHAR(50),
	FIELD_TYPE SMALLINT,
	FIELD_OPTIONS TEXT,
	FIELD_HELP_MESSAGE VARCHAR(1024),
	IS_REQUIRED TINYINT,	
	VALIDATION VARCHAR(250),
	DISPLAY_ORDER INTEGER
);

create table IF NOT EXISTS PROFILE_CUSTOM_FIELD_VALUES (
	PROFILE_ID INTEGER UNSIGNED,
	FIELD_ID INTEGER UNSIGNED,
	FIELD_VALUE TEXT,
	constraint PROFILE_CUSTOM_FIELD_VALUES_PK PRIMARY KEY (PROFILE_ID, FIELD_ID)
);

create table IF NOT EXISTS FUND_DETAILS (
	FUND_ID INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
	FUND_NAME VARCHAR(64),
	FUND_DESCRIPTION VARCHAR(512),
	VISIBILITY TINYINT DEFAULT 1,

	index FUND_DETAILS_IDX_1 (VISIBILITY),
	index FUND_DETAILS_IDX_2 (FUND_ID, VISIBILITY),
	constraint FUND_DETAILS_PK PRIMARY KEY (FUND_ID)
);

create table IF NOT EXISTS BATCH_DETAILS (
	BATCH_ID INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
	BATCH_NAME VARCHAR(64),
	BATCH_DESCRIPTION VARCHAR(512),
	EXPECTED_AMOUNT DECIMAL(15,2),
	BATCH_CREATED_TIME DATETIME,
	LAST_UPDATE_TIME DATETIME,

	index BATCH_DETAILS_IDX_1 (BATCH_CREATED_TIME),
	index BATCH_DETAILS_IDX_2 (LAST_UPDATE_TIME),
	constraint BATCH_DETAILS_PK PRIMARY KEY (BATCH_ID)
);

create table IF NOT EXISTS CONTRIBUTION_DETAILS (
	CONTRIBUTION_ID BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
	CONTRIBUTION_DATE DATETIME,
	BATCH_ID INTEGER UNSIGNED,	
	PROFILE_ID INTEGER UNSIGNED, 
	TRANSACTION_TYPE TINYINT,
	PAYMENT_MODE SMALLINT,
	REFERENCE_NUMBER VARCHAR(255),
	TOTAL_AMOUNT DECIMAL(15,2),
	LAST_UPDATE_TIME DATETIME,
	LAST_UPDATE_USER_ID BIGINT UNSIGNED,
	LAST_UPDATE_USER_NAME VARCHAR(128),	

	index CONTRIBUTION_DETAILS_IDX_1 (BATCH_ID),
	index CONTRIBUTION_DETAILS_IDX_2 (PROFILE_ID),
	index CONTRIBUTION_DETAILS_IDX_3 (BATCH_ID, PROFILE_ID),
	constraint CONTRIBUTION_DETAILS PRIMARY KEY (CONTRIBUTION_ID)
);

create table IF NOT EXISTS CONTRIBUTION_SPLIT_DETAILS (
	CONTRIBUTION_SPLIT_ID BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
	CONTRIBUTION_ID BIGINT UNSIGNED,
	BATCH_ID INTEGER UNSIGNED,
	FUND_ID INTEGER UNSIGNED,	
	AMOUNT DECIMAL(15,2),
	NOTES VARCHAR(255),

	index CONTRIBUTION_SPLIT_DETAILS_IDX_1 (CONTRIBUTION_ID),
	index CONTRIBUTION_SPLIT_DETAILS_IDX_2 (BATCH_ID),
	index CONTRIBUTION_SPLIT_DETAILS_IDX_3 (FUND_ID),
	index CONTRIBUTION_SPLIT_DETAILS_IDX_4 (BATCH_ID, FUND_ID, CONTRIBUTION_ID),
	constraint CONTRIBUTION_SPLIT_DETAILS PRIMARY KEY (CONTRIBUTION_SPLIT_ID),
	constraint CONTRIBUTION_SPLIT_DETAILS_FK_1 FOREIGN KEY (CONTRIBUTION_ID) REFERENCES CONTRIBUTION_DETAILS (CONTRIBUTION_ID)
);

create table IF NOT EXISTS SUBSCRIPTION_FIELDS (
	FIELD_ID INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
	FIELD_NAME VARCHAR(255),
	HIDE TINYINT UNSIGNED NOT NULL DEFAULT 0,
	IS_ACTIVE TINYINT UNSIGNED NOT NULL DEFAULT 0,
	index SUBSCRIPTION_FIELDS_IDX_1 (FIELD_NAME),
	index SUBSCRIPTION_FIELDS_IDX_2 (HIDE),
	index SUBSCRIPTION_FIELDS_IDX_3 (IS_ACTIVE),
	constraint SUBSCRIPTION_FIELDS_PK PRIMARY KEY (FIELD_ID)
);

create table IF NOT EXISTS SUBSCRIPTION_DETAILS (
	SUBSCRIPTION_ID BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
	PROFILE_ID INTEGER UNSIGNED,
	DATE_OF_SUBSCRIPTION DATE,
	SUB_FIELD_1 DECIMAL(15,2),
	SUB_FIELD_2 DECIMAL(15,2),
	SUB_FIELD_3 DECIMAL(15,2),
	SUB_FIELD_4 DECIMAL(15,2),
	SUB_FIELD_5 DECIMAL(15,2),
	SUB_FIELD_6 DECIMAL(15,2),
	SUB_FIELD_7 DECIMAL(15,2),
	SUB_FIELD_8 DECIMAL(15,2),
	SUB_FIELD_9 DECIMAL(15,2),
	SUB_FIELD_10 DECIMAL(15,2),
	SUB_FIELD_11 DECIMAL(15,2),
	SUB_FIELD_12 DECIMAL(15,2),
	SUB_FIELD_13 DECIMAL(15,2),
	SUB_FIELD_14 DECIMAL(15,2),
	SUB_FIELD_15 DECIMAL(15,2),
	SUB_FIELD_16 DECIMAL(15,2),
	SUB_FIELD_17 DECIMAL(15,2),
	SUB_FIELD_18 DECIMAL(15,2),
	SUB_FIELD_19 DECIMAL(15,2),
	SUB_FIELD_20 DECIMAL(15,2),
	TOTAL_AMOUNT DECIMAL(15,2),
	
	index SUBSCRIPTION_DETAILS_IDX_1 (PROFILE_ID),
	index SUBSCRIPTION_DETAILS_IDX_2 (DATE_OF_SUBSCRIPTION),
	constraint SUBSCRIPTION_DETAILS_PK PRIMARY KEY (SUBSCRIPTION_ID),
	constraint SUBSCRIPTION_DETAILS_FK_1 FOREIGN KEY (PROFILE_ID) REFERENCES PROFILE_DETAILS (PROFILE_ID)
);

create table IF NOT EXISTS HARVEST_DETAILS (
	HARVEST_ID BIGINT NOT NULL unique AUTO_INCREMENT,
	PROFILE_ID INTEGER UNSIGNED NOT NULL,
	DATE_OF_HARVEST DATE NOT NULL,
	ITEM_DESCRIPTION VARCHAR(255) NOT NULL,
	ITEM_AMOUNT DECIMAL(15,2) NOT NULL,
		
	constraint HARVEST_DETAILS_PK PRIMARY KEY (HARVEST_ID)
);

create table IF NOT EXISTS PROFILE_SETTINGS (
	SETTINGS_ID INTEGER UNSIGNED NOT NULL,
	OPTION_ID INTEGER UNSIGNED NOT NULL,
	OPTION_VALUE VARCHAR(255) NOT NULL,

	constraint PROFILE_SETTINGS_PK PRIMARY KEY (SETTINGS_ID, OPTION_ID)
);

create table IF NOT EXISTS REPORTS (
	REPORT_ID BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
	TITLE VARCHAR(255) NOT NULL,
	DESCRIPTION VARCHAR(1024),

	constraint REPORTS_PK PRIMARY KEY (REPORT_ID)
);

create table IF NOT EXISTS REPORT_RULES (
	REPORT_ID BIGINT UNSIGNED NOT NULL,
	RULE_TYPE VARCHAR(256) NOT NULL,
	RULE_SUB_TYPE VARCHAR(256) NOT NULL,
	RULE_VALUE VARCHAR(256) NOT NULL,

	index REPORT_RULES_IDX_1 (REPORT_ID),
	constraint REPORT_RULES_FK FOREIGN KEY (REPORT_ID) REFERENCES REPORTS(REPORT_ID)
);

create table IF NOT EXISTS REPORT_COLUMNS (
	REPORT_ID BIGINT UNSIGNED NOT NULL,
	COLUMN_CATEGORY VARCHAR(50) NOT NULL,
	COLUMN_DATA VARCHAR(50) NOT NULL,
	COLUMN_HEADING VARCHAR(50) NOT NULL,

	index REPORT_COLUMNS_IDX_1 (REPORT_ID),
	constraint REPORT_COLUMNS_FK FOREIGN KEY (REPORT_ID) REFERENCES REPORTS(REPORT_ID)
);

create table IF NOT EXISTS EVENT_DETAILS (
	EVENT_ID BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
	TITLE VARCHAR(255),
	DESCRIPTION VARCHAR(1024),
	EVENT_LOCATION VARCHAR(255),
	START_DATE DATE,
	END_DATE DATE,
	START_TIME SMALLINT UNSIGNED,
	END_TIME SMALLINT UNSIGNED,
	RRULE VARCHAR(512),
	PRIORITY TINYINT UNSIGNED,
	ORGANISER VARCHAR(255),
	ACCESS_LEVEL TINYINT UNSIGNED,

	index EVENT_DETAILS_IDX_1 (TITLE),
	index EVENT_DETAILS_IDX_2 (DESCRIPTION),
	index EVENT_DETAILS_IDX_3 (START_DATE),
	index EVENT_DETAILS_IDX_4 (START_TIME),
	index EVENT_DETAILS_IDX_5 (END_TIME),
	index EVENT_DETAILS_IDX_6 (RRULE),
	index EVENT_DETAILS_IDX_7 (PRIORITY),
	index EVENT_DETAILS_IDX_8 (ORGANISER),
	index EVENT_DETAILS_IDX_9 (ACCESS_LEVEL),
	constraint EVENT_DETAILS_PK PRIMARY KEY (EVENT_ID)
);

create table IF NOT EXISTS EVENT_PARTICIPANTS (
	EVENT_ID BIGINT UNSIGNED NOT NULL,
	PARTICIPANT_TYPE TINYINT UNSIGNED,
	PARTICIPANT_ID BIGINT UNSIGNED,

	index EVENT_PARTICIPANTS_IDX_1 (EVENT_ID),
	index EVENT_PARTICIPANTS_IDX_2 (PARTICIPANT_TYPE),
	index EVENT_PARTICIPANTS_IDX_3 (PARTICIPANT_ID),
	constraint EVENT_PARTICIPANTS_FK FOREIGN KEY (EVENT_ID) REFERENCES EVENT_DETAILS(EVENT_ID)
);

create table IF NOT EXISTS EVENT_NOTIFICATIONS (
	NOTIFICATION_ID BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
	EVENT_ID BIGINT UNSIGNED NOT NULL,
	NOTIFICATION_TYPE TINYINT,
	NOTIFICATION_PERIOD INTEGER UNSIGNED,
	IS_NOTIFICATION_SENT TINYINT UNSIGNED NOT NULL DEFAULT 0,

	index EVENT_NOTIFICATIONS_IDX_1 (EVENT_ID),
	index EVENT_NOTIFICATIONS_IDX_2 (NOTIFICATION_TYPE),
	index EVENT_NOTIFICATIONS_IDX_3 (NOTIFICATION_PERIOD),
	index EVENT_NOTIFICATIONS_IDX_4 (IS_NOTIFICATION_SENT),
	constraint EVENT_NOTIFICATIONS_PK PRIMARY KEY (NOTIFICATION_ID),
	constraint EVENT_NOTIFICATIONS_FK FOREIGN KEY (EVENT_ID) REFERENCES EVENT_DETAILS(EVENT_ID)
);

create table IF NOT EXISTS EVENT_EMAIL_TEMPLATES (
	EVENT_ID BIGINT UNSIGNED NOT NULL,
	SUBJECT VARCHAR(256),
	CONTENT TEXT,
	ATTACHMENT_PATH VARCHAR(256),
	USE_TEMPLATE_FILE TINYINT UNSIGNED NOT NULL DEFAULT 0,
	TEMPLATE_FILE_PATH VARCHAR(256),

	constraint EVENT_EMAIL_TEMPLATES_PK PRIMARY KEY (EVENT_ID),
	constraint EVENT_EMAIL_TEMPLATES_FK FOREIGN KEY (EVENT_ID) REFERENCES EVENT_DETAILS(EVENT_ID)
);


create table IF NOT EXISTS EVENT_AUTO_NOTIFY_REPORTS (
	NOTIFICATION_TYPE VARCHAR(64),
	EVENT_ID BIGINT UNSIGNED,
	FOR_OCCURRENCE VARCHAR(256),
	UPDATED_ON DATETIME,

	constraint EVENT_AUTO_NOTIFY_REPORTS_PK PRIMARY KEY (NOTIFICATION_TYPE, EVENT_ID, FOR_OCCURRENCE)
);

create table IF NOT EXISTS GROUP_DETAILS (
	GROUP_ID INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
	GROUP_NAME VARCHAR(100),
	DESCRIPTION VARCHAR(1024),

	index GROUP_DETAILS_IDX_1 (GROUP_NAME),
	constraint GROUP_DETAILS_PK PRIMARY KEY (GROUP_ID, GROUP_NAME)
);

create table IF NOT EXISTS GROUP_MEMBERS (
	GROUP_ID INTEGER UNSIGNED NOT NULL,
	PROFILE_ID INTEGER UNSIGNED,

	index GROUP_MEMBERS_IDX_1 (PROFILE_ID),
	constraint GROUP_MEMBERS_PK PRIMARY KEY (GROUP_ID, PROFILE_ID),
	constraint GROUP_MEMBERS_FK_1 FOREIGN KEY (GROUP_ID) REFERENCES GROUP_DETAILS(GROUP_ID),
	constraint GROUP_MEMBERS_FK_2 FOREIGN KEY (PROFILE_ID) REFERENCES PROFILE_DETAILS(PROFILE_ID)
);

create table SMS_PROVIDERS (
	SMS_PROVIDER_ID SMALLINT UNSIGNED NOT NULL,
	SMS_PROVIDER_NAME VARCHAR(128),
	SMS_PROVIDER_WEBSITE VARCHAR(128),
	constraint SMS_PROVIDERS_PK PRIMARY KEY (SMS_PROVIDER_ID)
);

create table TWILIO_CONFIGURATION (
	CONFIG_ID SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT UNIQUE,
	ACCOUNT_SID VARCHAR(128),
	AUTH_TOKEN VARCHAR(128),
	FROM_NUMBER VARCHAR(16),
	STATUS TINYINT UNSIGNED,

	constraint TWILIO_CONFIGURATION_PK PRIMARY KEY (ACCOUNT_SID, AUTH_TOKEN, FROM_NUMBER)
);

create table NEXMO_CONFIGURATION (
	CONFIG_ID SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT UNIQUE,
	API_KEY VARCHAR(128),
	API_SECRET VARCHAR(128),
	FROM_NUMBER VARCHAR(16),
	STATUS TINYINT UNSIGNED,

	constraint TWILIO_CONFIGURATION_PK PRIMARY KEY (API_KEY, API_SECRET, FROM_NUMBER)
);

create table BHASHSMS_CONFIGURATION (
	CONFIG_ID SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT UNIQUE,
	USERNAME VARCHAR(128),
	PASSWORD VARCHAR(128),
	SENDERID VARCHAR(128),
	PRIORITY VARCHAR(128),
	STATUS TINYINT UNSIGNED,

	constraint BHASHSMS_CONFIGURATION_PK PRIMARY KEY (USERNAME, SENDERID)
);

create table GLOBAL_CONFIGURATION (
	FEATURE_NAME VARCHAR(64),
	FEATURE_KEY VARCHAR(128),
	FEATURE_INT_VALUE BIGINT,
	FEATURE_STRING_VALUE VARCHAR(256),

	constraint GLOBAL_CONFIGURATION_PK PRIMARY KEY (FEATURE_NAME, FEATURE_KEY)
);

create table IF NOT EXISTS GREETINGS_AUTO_NOTIFY_REPORTS (
	NOTIFICATION_TYPE VARCHAR(64),
	FOR_OCCURRENCE VARCHAR(256),
	UPDATED_ON DATETIME,

	constraint GREETINGS_AUTO_NOTIFY_REPORTS_PK PRIMARY KEY (NOTIFICATION_TYPE, FOR_OCCURRENCE)
);

create table IF NOT EXISTS NOTIFICATIONS_EMAIL_SMS_REPORTS (
	REPORT_ID BIGINT UNSIGNED NOT NULL AUTO_INCREMENT UNIQUE,
	EMAIL_OR_SMS TINYINT UNSIGNED,
	TRIGGERED_FOR VARCHAR(256),
	RAW_CONTENT MEDIUMTEXT,
	SENT_TIME DATETIME,
	RECIPIENTS_COUNT BIGINT,

	index NOTIFICATIONS_EMAIL_SMS_REPORTS_IDX_1 (EMAIL_OR_SMS),
	index NOTIFICATIONS_EMAIL_SMS_REPORTS_IDX_2 (SENT_TIME),
	constraint NOTIFICATIONS_EMAIL_SMS_REPORTS_PK PRIMARY KEY (REPORT_ID)
);

create table IF NOT EXISTS MASS_NOTIFICATION_DETAILS (
	NOTIFICATION_ID BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
	NOTIFICATION_TYPE TINYINT UNSIGNED,
	NOTIFICATION_SUBJECT VARCHAR(1024),
	NOTIFICATION_CONTENT MEDIUMTEXT,
	IS_DRAFT TINYINT UNSIGNED NOT NULL DEFAULT 0,
	CREATED_BY BIGINT UNSIGNED,
	LAST_UPDATE_USER_ID BIGINT UNSIGNED,
	LAST_UPDATE_TIME DATETIME,
	IS_NOTIFICATION_SENT TINYINT UNSIGNED NOT NULL DEFAULT 0,

	index MASS_NOTIFICATION_DETAILS_IDX_1 (NOTIFICATION_TYPE),
	index MASS_NOTIFICATION_DETAILS_IDX_2 (IS_DRAFT),
	index MASS_NOTIFICATION_DETAILS_IDX_3 (IS_NOTIFICATION_SENT),
	constraint MASS_NOTIFICATION_DETAILS_PK PRIMARY KEY (NOTIFICATION_ID)
);

create table IF NOT EXISTS MASS_NOTIFICATION_PARTICIPANTS (
	NOTIFICATION_ID BIGINT UNSIGNED NOT NULL,
	PARTICIPANT_TYPE TINYINT UNSIGNED,
	PARTICIPANT_ID INTEGER UNSIGNED,

	index EVENT_PARTICIPANTS_IDX_1 (NOTIFICATION_ID),
	index EVENT_PARTICIPANTS_IDX_2 (PARTICIPANT_TYPE),
	index EVENT_PARTICIPANTS_IDX_3 (PARTICIPANT_ID),
	constraint MASS_NOTIFICATION_PARTICIPANTS_FK FOREIGN KEY (NOTIFICATION_ID) REFERENCES MASS_NOTIFICATION_DETAILS(NOTIFICATION_ID)
);

create table IF NOT EXISTS TEMPLATES (
	TEMPLATE_ID INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
	TEMPLATE_TYPE TINYINT UNSIGNED,
	TEMPLATE_NAME VARCHAR(256),
	TEMPLATE_SUBJECT VARCHAR(1024),
	TEMPLATE_CONTENT MEDIUMTEXT,
	CREATED_BY BIGINT UNSIGNED,
	LAST_UPDATE_USER_ID BIGINT UNSIGNED,
	LAST_UPDATE_TIME DATETIME,

	index TEMPLATES_IDX_1 (TEMPLATE_TYPE),
	index TEMPLATES_IDX_2 (TEMPLATE_NAME),
	constraint TEMPLATES_PK PRIMARY KEY (TEMPLATE_ID)
);

insert into PROFILE_SETTINGS values (1, 1, 'Mr');
insert into PROFILE_SETTINGS values (1, 2, 'Mrs');
insert into PROFILE_SETTINGS values (1, 3, 'Baby');
insert into PROFILE_SETTINGS values (1, 4, 'Dr');
insert into PROFILE_SETTINGS values (1, 5, 'Miss');
insert into PROFILE_SETTINGS values (1, 6, 'Ms');
insert into PROFILE_SETTINGS values (1, 7, 'Rev');
insert into PROFILE_SETTINGS values (1, 8, 'Master');

insert into PROFILE_SETTINGS values (2, 1, 'Self');
insert into PROFILE_SETTINGS values (2, 2, 'Wife');
insert into PROFILE_SETTINGS values (2, 3, 'Son');
insert into PROFILE_SETTINGS values (2, 4, 'Daughter');
insert into PROFILE_SETTINGS values (2, 5, 'Brother');
insert into PROFILE_SETTINGS values (2, 6, 'Sister');
insert into PROFILE_SETTINGS values (2, 7, 'Husband');
insert into PROFILE_SETTINGS values (2, 8, 'Grandson');
insert into PROFILE_SETTINGS values (2, 9, 'Granddaughter');
insert into PROFILE_SETTINGS values (2, 10, 'Mother');
insert into PROFILE_SETTINGS values (2, 11, 'Father');
insert into PROFILE_SETTINGS values (2, 12, 'Grandfather');
insert into PROFILE_SETTINGS values (2, 13, 'Grandmother');
insert into PROFILE_SETTINGS values (2, 14, 'Mother-in-law');
insert into PROFILE_SETTINGS values (2, 15, 'Father-in-law');
insert into PROFILE_SETTINGS values (2, 16, 'Daughter-in-law');
insert into PROFILE_SETTINGS values (2, 17, 'Son-in-law');

insert into PROFILE_SETTINGS values (3, 1, 'Single');
insert into PROFILE_SETTINGS values (3, 2, 'Married');
insert into PROFILE_SETTINGS values (3, 3, 'Widow');
insert into PROFILE_SETTINGS values (3, 4, 'Widower');

insert into PROFILE_SETTINGS values (4, 1, 'Active');
insert into PROFILE_SETTINGS values (4, 2, 'Inactive');
insert into PROFILE_SETTINGS values (4, 3, 'Deleted');

insert into SUBSCRIPTION_FIELDS (FIELD_NAME, HIDE) values ('General', 0);

insert into SMS_PROVIDERS (SMS_PROVIDER_ID, SMS_PROVIDER_NAME, SMS_PROVIDER_WEBSITE) values (1,'Twilio', 'http://www.twilio.com/');
insert into SMS_PROVIDERS (SMS_PROVIDER_ID, SMS_PROVIDER_NAME, SMS_PROVIDER_WEBSITE) values (2,'Nexmo', 'https://www.nexmo.com/');
insert into SMS_PROVIDERS (SMS_PROVIDER_ID, SMS_PROVIDER_NAME, SMS_PROVIDER_WEBSITE) values (3,'BhashSMS', 'http://bhashsms.com');
insert into GLOBAL_CONFIGURATION (FEATURE_NAME, FEATURE_KEY, FEATURE_INT_VALUE, FEATURE_STRING_VALUE) values ('SMS','SMS_ENABLED', 0, '');
insert into GLOBAL_CONFIGURATION (FEATURE_NAME, FEATURE_KEY, FEATURE_INT_VALUE, FEATURE_STRING_VALUE) values ('SMS','SMS_PROVIDER_ID', 0, '');
insert into GLOBAL_CONFIGURATION (FEATURE_NAME, FEATURE_KEY, FEATURE_INT_VALUE, FEATURE_STRING_VALUE) values ('BIRTHDAY_GREETINGS','EMAIL_GREETINGS_ENABLED', 0, '');
insert into GLOBAL_CONFIGURATION (FEATURE_NAME, FEATURE_KEY, FEATURE_INT_VALUE, FEATURE_STRING_VALUE) values ('BIRTHDAY_GREETINGS','EMAIL_GREETINGS_TEMPLATE_ID', 0, '');
insert into GLOBAL_CONFIGURATION (FEATURE_NAME, FEATURE_KEY, FEATURE_INT_VALUE, FEATURE_STRING_VALUE) values ('BIRTHDAY_GREETINGS','SMS_GREETINGS_ENABLED', 0, '');
insert into GLOBAL_CONFIGURATION (FEATURE_NAME, FEATURE_KEY, FEATURE_INT_VALUE, FEATURE_STRING_VALUE) values ('BIRTHDAY_GREETINGS','SMS_GREETINGS_TEMPLATE_ID', 0, '');
insert into GLOBAL_CONFIGURATION (FEATURE_NAME, FEATURE_KEY, FEATURE_INT_VALUE, FEATURE_STRING_VALUE) values ('WEDDING_GREETINGS','EMAIL_GREETINGS_ENABLED', 0, '');
insert into GLOBAL_CONFIGURATION (FEATURE_NAME, FEATURE_KEY, FEATURE_INT_VALUE, FEATURE_STRING_VALUE) values ('WEDDING_GREETINGS','EMAIL_GREETINGS_TEMPLATE_ID', 0, '');
insert into GLOBAL_CONFIGURATION (FEATURE_NAME, FEATURE_KEY, FEATURE_INT_VALUE, FEATURE_STRING_VALUE) values ('WEDDING_GREETINGS','SMS_GREETINGS_ENABLED', 0, '');
insert into GLOBAL_CONFIGURATION (FEATURE_NAME, FEATURE_KEY, FEATURE_INT_VALUE, FEATURE_STRING_VALUE) values ('WEDDING_GREETINGS','SMS_GREETINGS_TEMPLATE_ID', 0, '');
